{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "bad92591-dc99-4e90-9ce2-1873b3082f7d": {
        "id": "bad92591-dc99-4e90-9ce2-1873b3082f7d",
        "parent": null,
        "name": "indunilmix",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "e625f01f-d2b8-47b3-a225-97e7f0ea8927"
        ],
        "isRemovable": false,
        "filePath": "indunilmix"
      },
      "e625f01f-d2b8-47b3-a225-97e7f0ea8927": {
        "id": "e625f01f-d2b8-47b3-a225-97e7f0ea8927",
        "parent": "bad92591-dc99-4e90-9ce2-1873b3082f7d",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "indunilmix/lambda.js",
        "code": "let AWS = require('aws-sdk');\nlet SL_AWS = require('slappforge-sdk-aws');\nconst sqs = new SL_AWS.SQS(AWS);\n\nexports.handler = function (event, context, callback) {\n\n\n    sqs.sendMessage({\n        MessageBody: 'SQS check',\n        QueueUrl: `https://sqs.${process.env.AWS_REGION}.amazonaws.com/${process.env.SIGMA_AWS_ACC_ID}/indunilLIFO`,\n        DelaySeconds: '0',\n        MessageDeduplicationId: '123',\n        MessageGroupId: '142',\n        MessageAttributes: {\n            \"@a\": {\n                \"DataType\": \"String\",\n                \"StringValue\": \"1\"\n            }\n        }\n    }, function (data) {\n        console.log(\"success - S3\" + { data });\n        callback(null, \"Successfully executed to enduser data\" + { data });\n        // your logic (logging etc) to handle successful message delivery, should be here\n\n    }, function (error) {\n        // your logic (logging etc) to handle failures, should be here\n        console.log(\"error - S3\" + { err });\n        callback(null, \"Successfully executed to enduser catch\" + { err });\n    });\n\n    sqs.sendMessage({\n        MessageBody: 'hiru test',\n        QueueUrl: `https://sqs.${process.env.AWS_REGION}.amazonaws.com/${process.env.SIGMA_AWS_ACC_ID}/hiruindu`,\n        DelaySeconds: '0',\n        MessageAttributes: {\n            \"x\": {\n                \"DataType\": \"String\",\n                \"StringValue\": \"1\"\n            }\n        }\n    }, function (data) {\n        console.log(\"Success\");\n        // your logic (logging etc) to handle successful message delivery, should be here\n    }, function (error) {\n        console.log(\"error\");\n        // your logic (logging etc) to handle failures, should be here\n    });\n\n\n\n    callback(null, { \"message\": \"Successfully executed\" });\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "s3indunil1",
            "config": {
              "type": "s3:ObjectRemoved:*",
              "keyPrefix": "",
              "keySuffix": ""
            }
          }
        ],
        "testCases": {
          "28e8b379-988c-4718-90bc-41a2d0f10820": {
            "id": "28e8b379-988c-4718-90bc-41a2d0f10820",
            "name": "Unnamed event",
            "functionId": "e625f01f-d2b8-47b3-a225-97e7f0ea8927",
            "event": "{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "bad92591-dc99-4e90-9ce2-1873b3082f7d",
    "openFiles": [
      "e625f01f-d2b8-47b3-a225-97e7f0ea8927"
    ],
    "currentFileId": "e625f01f-d2b8-47b3-a225-97e7f0ea8927",
    "resources": {
      "s3indunil": {
        "name": "s3indunil",
        "type": "S3",
        "config": {
          "mode": 0,
          "bucket": {
            "region": "us-east-1",
            "name": "indunil"
          }
        }
      },
      "s3indunil1": {
        "name": "s3indunil1",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "indunil1"
          }
        }
      },
      "sqsIndunilSQSfifo": {
        "name": "sqsIndunilSQSfifo",
        "type": "SQS",
        "config": {
          "mode": 0,
          "existing": false,
          "name": "IndunilSQS.fifo",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/IndunilSQS.fifo",
          "selectedRegion": "us-east-1",
          "deliveryDelay": 0,
          "deliveryDelayUnit": "seconds",
          "useRedrivePolicy": false,
          "useSSE": false,
          "kmsCustomerMasterKey": "default",
          "accountId": "318300609668",
          "dataKeyReusePeriod": 5,
          "queueType": "fifoQueue",
          "defaultVisibilityTimeout": 30,
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": 4,
          "messageRetentionPeriodUnit": "days",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": 0,
          "deadLetterQueueName": "",
          "createdByApp": true
        }
      },
      "sqsindunilLIFO": {
        "name": "sqsindunilLIFO",
        "type": "SQS",
        "config": {
          "mode": 0,
          "existing": false,
          "name": "indunilLIFO",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/indunilLIFO",
          "selectedRegion": "us-east-1",
          "deliveryDelay": 0,
          "deliveryDelayUnit": "seconds",
          "useRedrivePolicy": false,
          "useSSE": false,
          "kmsCustomerMasterKey": "default",
          "accountId": "318300609668",
          "dataKeyReusePeriod": 5,
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": 30,
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": 4,
          "messageRetentionPeriodUnit": "days",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": 0,
          "deadLetterQueueName": ""
        }
      },
      "s3indunils3": {
        "name": "s3indunils3",
        "type": "S3",
        "config": {
          "mode": 0,
          "bucket": {
            "region": "us-east-1",
            "name": "indunils3"
          }
        }
      },
      "sqshiruindu": {
        "name": "sqshiruindu",
        "type": "SQS",
        "config": {
          "mode": 0,
          "existing": true,
          "name": "hiruindu",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/hiruindu",
          "selectedRegion": "us-east-1",
          "deliveryDelay": 0,
          "deliveryDelayUnit": "seconds",
          "useRedrivePolicy": false,
          "useSSE": false,
          "kmsCustomerMasterKey": "default",
          "accountId": "318300609668",
          "dataKeyReusePeriod": 5,
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": "120",
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": 4,
          "messageRetentionPeriodUnit": "days",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": 0,
          "deadLetterQueueName": "",
          "createdByApp": true
        }
      }
    },
    "customTemplate": {
      "dialect": "CloudFormation",
      "definitions": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "This template creates the stack for project indunilmix. Generated by Sigma",
        "Outputs": {
          "sqsindunilLIFO": {
            "Description": "URL of SQS queue indunilLIFO",
            "Value": {
              "Ref": "sqsindunilLIFO"
            }
          },
          "sqshiruindu": {
            "Description": "URL of SQS queue hiruindu",
            "Value": {
              "Ref": "sqshiruindu"
            }
          }
        },
        "Resources": {
          "sqsindunilLIFO": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "DelaySeconds": 0,
              "MaximumMessageSize": 262144,
              "MessageRetentionPeriod": 345600,
              "QueueName": "indunilLIFO",
              "ReceiveMessageWaitTimeSeconds": 0,
              "VisibilityTimeout": 75
            }
          },
          "sqshiruindu": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "DelaySeconds": 0,
              "MaximumMessageSize": 262144,
              "MessageRetentionPeriod": 345600,
              "QueueName": "hiruindu",
              "ReceiveMessageWaitTimeSeconds": 0,
              "VisibilityTimeout": 120
            }
          },
          "indunilmixlambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "FunctionName": "indunilmixlambda",
              "Description": "Invokes functions defined in indunilmix/lambda.js in project indunilmix. Generated by Sigma.",
              "Code": {
                "S3Bucket": "com.sigma.test.318300609668.sachithra.us-east-1",
                "S3Key": "indunilmix/sigma_builds/build_1562313854423.zip"
              },
              "MemorySize": 128,
              "Handler": "indunilmix/lambda.handler",
              "Timeout": 60,
              "Runtime": "nodejs8.10",
              "Layers": [],
              "Role": {
                "Fn::GetAtt": [
                  "indunilmixlambdaExecutionRole",
                  "Arn"
                ]
              },
              "Environment": {
                "Variables": {
                  "SIGMA_AWS_ACC_ID": "318300609668"
                }
              }
            }
          },
          "indunilmixlambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ],
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": [
                      "sts:AssumeRole"
                    ],
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "indunilmixlambdaPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:SendMessage"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "sqsindunilLIFO",
                            "Arn"
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:SendMessage"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "sqshiruindu",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "s3indunil1Permission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "Ref": "indunilmixlambda"
              },
              "SourceArn": "arn:aws:s3:::indunil1",
              "Principal": "s3.amazonaws.com"
            }
          },
          "s3indunil1Cli0indunilmixlambda": {
            "Type": "Custom::cli2cloudformation",
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "cli2cloudformationindunilmix",
                  "Arn"
                ]
              },
              "CliCommandCreate": {
                "Fn::Join": [
                  "",
                  [
                    "aws s3api put-bucket-notification-configuration --bucket indunil1 --notification-configuration ",
                    "\"LambdaFunctionConfigurations=[",
                    {
                      "Fn::Join": [
                        ",",
                        [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "{Events=[s3:ObjectRemoved:*],LambdaFunctionArn=",
                                {
                                  "Fn::GetAtt": [
                                    "indunilmixlambda",
                                    "Arn"
                                  ]
                                },
                                "}"
                              ]
                            ]
                          }
                        ]
                      ]
                    },
                    "]\""
                  ]
                ]
              },
              "CliCommandDelete": "aws s3api put-bucket-notification-configuration --bucket indunil1 --notification-configuration '{}'",
              "CliCommandUpdate": {
                "Fn::Join": [
                  "",
                  [
                    "aws s3api put-bucket-notification-configuration --bucket indunil1 --notification-configuration ",
                    "\"LambdaFunctionConfigurations=[",
                    {
                      "Fn::Join": [
                        ",",
                        [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "{Events=[s3:ObjectRemoved:*],LambdaFunctionArn=",
                                {
                                  "Fn::GetAtt": [
                                    "indunilmixlambda",
                                    "Arn"
                                  ]
                                },
                                "}"
                              ]
                            ]
                          }
                        ]
                      ]
                    },
                    "]\""
                  ]
                ]
              }
            }
          },
          "cli2cloudformationindunilmix": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "FunctionName": "cli2cloudformationindunilmix",
              "Description": "This is a utility lambda generated by Sigma, for bringing CF-unsupported operations into the CF template. Kudos to https://github.com/lucioveloso/cli2cloudformation",
              "Code": {
                "S3Bucket": "resources.us-east-1.sigma.slappforge.com",
                "S3Key": "CF/cf_shell_v1.zip"
              },
              "MemorySize": 128,
              "Handler": "index.lambda_handler",
              "Timeout": 60,
              "Runtime": "python2.7",
              "Layers": [],
              "Role": {
                "Fn::GetAtt": [
                  "cli2cloudformationindunilmixExecutionRole",
                  "Arn"
                ]
              }
            }
          },
          "cli2cloudformationindunilmixExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ],
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": [
                      "sts:AssumeRole"
                    ],
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "cli2cloudformationindunilmixPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutBucketNotification"
                        ],
                        "Resource": "arn:aws:s3:::indunil1"
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      }
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "slappforge-sdk-aws": {
          "name": "slappforge-sdk-aws",
          "language": "javascript",
          "version": "0.0.5",
          "dev": false,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "indunilmix",
    "projectDescription": "1111",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1562314244693
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "indunilmix",
      "url": "https://github.com/Indunil1992/indunilmix"
    }
  }
}